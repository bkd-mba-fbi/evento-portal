define(["module"], function (a) { "use strict"; var b, c, d, e, f, g = ["Msxml2.XMLHTTP", "Microsoft.XMLHTTP", "Msxml2.XMLHTTP.4.0"], h = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im, i = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im, j = "undefined" != typeof location && location.href, k = j && location.protocol && location.protocol.replace(/\:/, ""), l = j && location.hostname, m = j && (location.port || void 0), n = {}, o = a.config && a.config() || {}; return b = { version: "2.0.10", strip: function (a) { if (a) { a = a.replace(h, ""); var b = a.match(i); b && (a = b[1]) } else a = ""; return a }, jsEscape: function (a) { return a.replace(/(['\\])/g, "\\$1").replace(/[\f]/g, "\\f").replace(/[\b]/g, "\\b").replace(/[\n]/g, "\\n").replace(/[\t]/g, "\\t").replace(/[\r]/g, "\\r").replace(/[\u2028]/g, "\\u2028").replace(/[\u2029]/g, "\\u2029") }, createXhr: o.createXhr || function () { var a, b, c; if ("undefined" != typeof XMLHttpRequest) return new XMLHttpRequest; if ("undefined" != typeof ActiveXObject) for (b = 0; 3 > b; b += 1) { c = g[b]; try { a = new ActiveXObject(c) } catch (d) { } if (a) { g = [c]; break } } return a }, parseName: function (a) { var b, c, d, e = !1, f = a.indexOf("."), g = 0 === a.indexOf("./") || 0 === a.indexOf("../"); return -1 !== f && (!g || f > 1) ? (b = a.substring(0, f), c = a.substring(f + 1, a.length)) : b = a, d = c || b, f = d.indexOf("!"), -1 !== f && (e = "strip" === d.substring(f + 1), d = d.substring(0, f), c ? c = d : b = d), { moduleName: b, ext: c, strip: e } }, xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/, useXhr: function (a, c, d, e) { var f, g, h, i = b.xdRegExp.exec(a); return i ? (f = i[2], g = i[3], g = g.split(":"), h = g[1], g = g[0], !(f && f !== c || g && g.toLowerCase() !== d.toLowerCase() || (h || g) && h !== e)) : !0 }, finishLoad: function (a, c, d, e) { d = c ? b.strip(d) : d, o.isBuild && (n[a] = d), e(d) }, load: function (a, c, d, e) { if (e.isBuild && !e.inlineText) return d(), void 0; o.isBuild = e.isBuild; var f = b.parseName(a), g = f.moduleName + (f.ext ? "." + f.ext : ""), h = c.toUrl(g), i = o.useXhr || b.useXhr; return 0 === h.indexOf("empty:") ? (d(), void 0) : (!j || i(h, k, l, m) ? b.get(h, function (c) { b.finishLoad(a, f.strip, c, d) }, function (a) { d.error && d.error(a) }) : c([g], function (a) { b.finishLoad(f.moduleName + "." + f.ext, f.strip, a, d) }), void 0) }, write: function (a, c, d) { if (n.hasOwnProperty(c)) { var f = b.jsEscape(n[c]); d.asModule(a + "!" + c, "define(function () { return '" + f + "';});\n") } }, writeFile: function (a, c, d, e, f) { var g = b.parseName(c), h = g.ext ? "." + g.ext : "", i = g.moduleName + h, j = d.toUrl(g.moduleName + h) + ".js"; b.load(i, d, function () { var d = function (a) { return e(j, a) }; d.asModule = function (a, b) { return e.asModule(a, j, b) }, b.write(a, i, d, f) }, f) } }, "node" === o.env || !o.env && "undefined" != typeof process && process.versions && process.versions.node && !process.versions["node-webkit"] ? (c = require.nodeRequire("fs"), b.get = function (a, b, d) { try { var e = c.readFileSync(a, "utf8"); 0 === e.indexOf("\ufeff") && (e = e.substring(1)), b(e) } catch (f) { d(f) } }) : "xhr" === o.env || !o.env && b.createXhr() ? b.get = function (a, c, d, e) { var g, f = b.createXhr(); if (f.open("GET", a, !0), e) for (g in e) e.hasOwnProperty(g) && f.setRequestHeader(g.toLowerCase(), e[g]); o.onXhr && o.onXhr(f, a), f.onreadystatechange = function () { var e, g; 4 === f.readyState && (e = f.status, e > 399 && 600 > e ? (g = new Error(a + " HTTP status: " + e), g.xhr = f, d(g)) : c(f.responseText), o.onXhrComplete && o.onXhrComplete(f, a)) }, f.send(null) } : "rhino" === o.env || !o.env && "undefined" != typeof Packages && "undefined" != typeof java ? b.get = function (a, b) { var c, d, e = "utf-8", f = new java.io.File(a), g = java.lang.System.getProperty("line.separator"), h = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(f), e)), i = ""; try { for (c = new java.lang.StringBuffer, d = h.readLine(), d && d.length() && 65279 === d.charAt(0) && (d = d.substring(1)), null !== d && c.append(d) ; null !== (d = h.readLine()) ;) c.append(g), c.append(d); i = String(c.toString()) } finally { h.close() } b(i) } : ("xpconnect" === o.env || !o.env && "undefined" != typeof Components && Components.classes && Components.interfaces) && (d = Components.classes, e = Components.interfaces, Components.utils["import"]("resource://gre/modules/FileUtils.jsm"), f = "@mozilla.org/windows-registry-key;1" in d, b.get = function (a, b) { var c, g, h, i = {}; f && (a = a.replace(/\//g, "\\")), h = new FileUtils.File(a); try { c = d["@mozilla.org/network/file-input-stream;1"].createInstance(e.nsIFileInputStream), c.init(h, 1, 0, !1), g = d["@mozilla.org/intl/converter-input-stream;1"].createInstance(e.nsIConverterInputStream), g.init(c, "utf-8", c.available(), e.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER), g.readString(c.available(), i), g.close(), c.close(), b(i.value) } catch (j) { throw new Error((h && h.path || "") + ": " + j) } }), b });